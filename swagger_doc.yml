swagger: "2.0"
info:
  title: Get All Products API
  version: 1.0.0
paths:
  /get_all_products:
    get:
      summary: Retrieve all products
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
  /get_address:
    get:
      summary: Get address information by Brazilian postal code (CEP)
      parameters:
        - in: query
          name: cep
          description: The Brazilian postal code (CEP) to retrieve address information for.
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              cep:
                type: string
                description: The Brazilian postal code (CEP).
              logradouro:
                type: string
                description: The street address.
              complemento:
                type: string
                description: Additional address information.
              bairro:
                type: string
                description: The neighborhood.
              localidade:
                type: string
                description: The city.
              uf:
                type: string
                description: The state abbreviation.
              ibge:
                type: string
                description: The IBGE code.
              gia:
                type: string
                description: The GIA code.
              ddd:
                type: string
                description: The DDD code.
              siafi:
                type: string
                description: The SIAFI code.
  /insert_product:
    post:
      summary: Insert a new product
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Product object to be inserted
          required: true
          schema:
            type: object
            properties:
              brand:
                type: string
                description: The brand of the product
              name:
                type: string
                description: The name of the product
              price:
                type: number
                format: double
                description: The price of the product
              amount:
                type: number
                format: integer
                description: The amount of items in stock
              type:
                type: string
                description: The type of the product (lipstick or gloss)
            required:
              - name
              - price
              - type
              - brand
              - amount
  /edit_product:
    put:
      summary: overwrites a product
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Product object to be used as replacement
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the product to replace
              brand:
                type: string
                description: The brand of the product
              name:
                type: string
                description: The name of the product
              price:
                type: number
                format: double
                description: The price of the product
              amount:
                type: number
                format: integer
                description: The amount of items in stock
              type:
                type: string
                description: The type of the product (lipstick or gloss)
            required:
              - id
              - name
              - price
              - type
              - brand
              - amount
  /delete_product:
    delete:
      summary: Delete a product by ID
      consumes:
        - application/json
      parameters:
        - in: query
          name: id
          description: The ID of the product to delete
          required: true
          type: integer
definitions:
  Product:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The unique identifier for the product
      name:
        type: string
        description: The name of the product
      brand:
         type: string
         description: The Brand of the product
      type:
         type: string
         description: The type of the product
      price:
        type: number
        format: double
        description: The price of the product
      amount:
        type: number
        format: integer
        description: The amount of items in stock
